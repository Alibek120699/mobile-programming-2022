{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/aleke/kbtu/mobile-programming/music-player/screens/NotificationsScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { connect } from \"react-redux\";\nimport { readNotification, loadNotifications } from \"../actions/ActionCreators\";\nimport { ScrollView } from \"react-native-gesture-handler\";\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var notifications = state.notifications;\n  return {\n    notifications: notifications\n  };\n};\n\nvar mapDispatchToProps = {\n  loadNotifications: loadNotifications,\n  readNotification: readNotification\n};\n\nvar NotificationsScreen = function (_React$Component) {\n  _inherits(NotificationsScreen, _React$Component);\n\n  var _super = _createSuper(NotificationsScreen);\n\n  function NotificationsScreen() {\n    _classCallCheck(this, NotificationsScreen);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(NotificationsScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      console.log(this.props.notifications);\n      return React.createElement(ScrollView, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 5\n        }\n      }, React.createElement(View, {\n        style: styles.breakLine,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }\n      }, \"---------Notifications---------\")), this.props.notifications.length > 0 && this.props.notifications.map(function (n) {\n        return React.createElement(View, {\n          style: {\n            display: 'flex',\n            alignItems: 'center'\n          },\n          key: n.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }\n        }, React.createElement(View, {\n          style: styles.messageStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }\n        }, React.createElement(Text, {\n          style: styles.textStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }\n        }, n.message)), React.createElement(Text, {\n          style: {\n            fontSize: 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }\n        }, n.isRead), React.createElement(View, {\n          style: styles.buttonStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }\n        }, React.createElement(Button, {\n          style: \"steelblue\",\n          onPress: function onPress() {\n            return _this.props.readNotification(n);\n          },\n          title: \"Read\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }\n        })));\n      }));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.loadNotifications();\n    }\n  }]);\n\n  return NotificationsScreen;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  textStyle: {\n    marginLeft: 26,\n    marginTop: 10,\n    fontSize: 18,\n    marginRight: 26\n  },\n  breakLine: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 25\n  },\n  messageStyle: {\n    backgroundColor: \"#f7f7b0\",\n    marginLeft: 26,\n    marginRight: 26,\n    height: 60,\n    marginTop: -15\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#cafaee',\n    height: 'auto'\n  },\n  buttonStyle: {\n    width: 80,\n    height: 80\n  }\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(NotificationsScreen);","map":{"version":3,"sources":["/Users/aleke/kbtu/mobile-programming/music-player/screens/NotificationsScreen.js"],"names":["React","connect","readNotification","loadNotifications","ScrollView","mapStateToProps","state","notifications","mapDispatchToProps","NotificationsScreen","console","log","props","styles","container","breakLine","fontSize","length","map","n","display","alignItems","id","messageStyle","textStyle","message","isRead","buttonStyle","Component","StyleSheet","create","marginLeft","marginTop","marginRight","justifyContent","marginBottom","backgroundColor","height","flex","width"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Button,\n  View,\n  Text,\n  StyleSheet,\n} from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { \n  readNotification, \n  loadNotifications \n} from \"../actions/ActionCreators\";\nimport { ScrollView } from \"react-native-gesture-handler\";\n\nconst mapStateToProps = (state) => {\n  const {notifications} = state;\n  return {notifications};\n}\n\nconst mapDispatchToProps = {\n  loadNotifications,\n  readNotification,\n}\n\nclass NotificationsScreen extends React.Component {\n\n  render(){\n    console.log(this.props.notifications);\n    return (\n\n    <ScrollView style={styles.container}>\n\n        <View style={styles.breakLine}>\n          <Text style={{fontSize: 25}}>---------Notifications---------</Text>\n        </View>\n        \n        {\n          this.props.notifications.length>0 && this.props.notifications.map(n => \n            <View style={{display: 'flex', alignItems: 'center'}} key={n.id}>\n              <View style={styles.messageStyle}>\n                <Text style={styles.textStyle}>{n.message}</Text>\n              </View>\n              <Text style={{fontSize: 20}}>{n.isRead}</Text>\n              <View style={styles.buttonStyle}>\n                <Button style=\"steelblue\"\n                //onPress={() => alert(this.props.notifications[n.id-1].message)}\n                onPress={() => this.props.readNotification(n)}\n                title=\"Read\" />\n              </View>\n            </View>\n          )\n        }   \n    </ScrollView>\n    );\n  }\n\n  componentDidMount(){\n    this.props.loadNotifications();\n  }\n}\n\nconst styles = StyleSheet.create({\n  textStyle: {\n    marginLeft: 26,\n    marginTop: 10,\n    fontSize: 18,\n    marginRight: 26\n  },\n  breakLine: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 25\n  },\n  messageStyle: {\n    backgroundColor: \"#f7f7b0\",\n    marginLeft: 26,\n    marginRight: 26,\n    height: 60,\n    marginTop: -15\n\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#cafaee',\n    height: 'auto'\n  },\n  buttonStyle: {\n    width: 80,\n    height: 80,\n    \n  \n  }\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NotificationsScreen);\n"]},"metadata":{},"sourceType":"module"}